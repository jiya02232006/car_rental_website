version: '3.8'

services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: car_rental_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: car_rental_db
      MYSQL_USER: car_rental_user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/sample_data.sql:/docker-entrypoint-initdb.d/02-sample_data.sql
    networks:
      - car_rental_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: car_rental_api
    environment:
      - NODE_ENV=development
      - DB_HOST=database
      - DB_USER=car_rental_user
      - DB_PASSWORD=password
      - DB_NAME=car_rental_db
      - DB_PORT=3306
      - JWT_SECRET=your_jwt_secret_key_here
      - PORT=5000
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./backend/uploads:/app/uploads
    depends_on:
      database:
        condition: service_healthy
    networks:
      - car_rental_network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: car_rental_frontend
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_APP_NAME=Car Rental System
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - car_rental_network
    command: npm run dev

volumes:
  mysql_data:

networks:
  car_rental_network:
    driver: bridge